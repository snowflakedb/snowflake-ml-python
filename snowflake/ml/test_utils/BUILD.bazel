load("//bazel:py_rules.bzl", "py_library", "py_test")

package(default_visibility = ["//visibility:public"])

py_library(
    name = "exception_utils",
    testonly = True,
    srcs = ["exception_utils.py"],
    deps = [
        "//snowflake/ml/_internal/exceptions",
    ],
)

py_library(
    name = "test_env_utils",
    testonly = True,
    srcs = ["test_env_utils.py"],
)

py_library(
    name = "mock_snowml_base",
    testonly = True,
    srcs = ["mock_snowml_base.py"],
    deps = [
        "//snowflake/ml/_internal/utils:formatting",
    ],
)

py_library(
    name = "mock_data_frame",
    testonly = True,
    srcs = ["mock_data_frame.py"],
    deps = [
        ":mock_snowml_base",
        "//snowflake/ml/_internal/utils:string_matcher",
    ],
)

py_test(
    name = "mock_data_frame_test",
    srcs = ["mock_data_frame_test.py"],
    tags = ["feature:core"],
    deps = [
        ":mock_data_frame",
    ],
)

py_library(
    name = "mock_session",
    testonly = True,
    srcs = ["mock_session.py"],
    deps = [
        ":mock_data_frame",
        "//snowflake/ml/_internal/utils:string_matcher",
    ],
)

py_test(
    name = "mock_session_test",
    srcs = ["mock_session_test.py"],
    tags = ["feature:core"],
    deps = [
        ":mock_data_frame",
        ":mock_session",
    ],
)

py_library(
    name = "pytest_driver",
    testonly = True,
    srcs = ["pytest_driver.py"],
)
