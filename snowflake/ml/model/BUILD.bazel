load("//bazel:py_rules.bzl", "py_library", "py_test")

package(default_visibility = ["//visibility:public"])

py_library(
    name = "type_hints",
    srcs = ["type_hints.py"],
    deps = [
        "//snowflake/ml/model/_signatures:core",
        "//snowflake/ml/modeling/framework",
    ],
)

py_library(
    name = "model_signature",
    srcs = ["model_signature.py"],
    deps = [
        ":type_hints",
        "//snowflake/ml/_internal:type_utils",
        "//snowflake/ml/_internal/exceptions",
        "//snowflake/ml/_internal/utils:formatting",
        "//snowflake/ml/_internal/utils:identifier",
        "//snowflake/ml/_internal/utils:sql_identifier",
        "//snowflake/ml/model/_signatures:base_handler",
        "//snowflake/ml/model/_signatures:builtins_handler",
        "//snowflake/ml/model/_signatures:core",
        "//snowflake/ml/model/_signatures:numpy_handler",
        "//snowflake/ml/model/_signatures:pandas_handler",
        "//snowflake/ml/model/_signatures:pytorch_handler",
        "//snowflake/ml/model/_signatures:snowpark_handler",
        "//snowflake/ml/model/_signatures:tensorflow_handler",
        "//snowflake/ml/model/_signatures:utils",
    ],
)

py_library(
    name = "custom_model",
    srcs = ["custom_model.py"],
    deps = [
        ":type_hints",
    ],
)

py_library(
    name = "model",
    srcs = ["__init__.py"],
    deps = [
        "//snowflake/ml/model/_client/model:model_impl",
        "//snowflake/ml/model/_client/model:model_version_impl",
        "//snowflake/ml/model/models:huggingface_pipeline",
    ],
)

py_test(
    name = "package_visibility_test",
    srcs = ["package_visibility_test.py"],
    deps = [
        ":custom_model",
        ":model",
        ":model_signature",
        ":type_hints",
    ],
)

py_test(
    name = "custom_model_test",
    srcs = ["custom_model_test.py"],
    deps = [
        ":custom_model",
    ],
)

py_test(
    name = "model_signature_test",
    srcs = ["model_signature_test.py"],
    deps = [
        ":model_signature",
        "//snowflake/ml/test_utils:exception_utils",
    ],
)
