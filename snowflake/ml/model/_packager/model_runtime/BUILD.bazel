load("//bazel:py_rules.bzl", "py_genrule", "py_library", "py_test")

package(default_visibility = ["//visibility:public"])

GEN_RUNTIME_REQ_CMD = "$(location //bazel/requirements:parse_and_generate_requirements) $(location //:requirements.yml) --schema $(location //bazel/requirements:requirements.schema.json) --mode version_requirements --format python --snowflake_channel_only > $@"

py_genrule(
    name = "gen_snowml_inference_alternative_requirements",
    srcs = [
        "//:requirements.yml",
        "//bazel/requirements:requirements.schema.json",
    ],
    outs = ["_snowml_inference_alternative_requirements.py"],
    cmd = GEN_RUNTIME_REQ_CMD,
    tools = ["//bazel/requirements:parse_and_generate_requirements"],
)

py_library(
    name = "_snowml_inference_alternative_requirements",
    srcs = [":gen_snowml_inference_alternative_requirements"],
)

py_library(
    name = "model_runtime",
    srcs = ["model_runtime.py"],
    deps = [
        ":_snowml_inference_alternative_requirements",
        "//snowflake/ml/_internal:env_utils",
        "//snowflake/ml/_internal:file_utils",
        "//snowflake/ml/model/_model_composer/model_manifest:model_manifest_schema",
        "//snowflake/ml/model/_packager/model_env",
    ],
)

py_test(
    name = "model_runtime_test",
    srcs = ["model_runtime_test.py"],
    deps = [
        ":model_runtime",
        "//snowflake/ml/_internal:env_utils",
    ],
)
