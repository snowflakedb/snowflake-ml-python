load("//bazel:py_rules.bzl", "py_library", "py_test")

package(default_visibility = ["//visibility:public"])

py_library(
    name = "base_handler",
    srcs = ["base_handler.py"],
    deps = [
        ":core",
        "//snowflake/ml/model:type_hints",
    ],
)

py_library(
    name = "core",
    srcs = ["core.py"],
    deps = [
        "//snowflake/ml/_internal/exceptions",
        "//snowflake/ml/utils:html_utils",
    ],
)

py_test(
    name = "core_test",
    srcs = ["core_test.py"],
    tags = ["feature:model_registry"],
    deps = [
        ":core",
        "//snowflake/ml/test_utils:exception_utils",
    ],
)

py_library(
    name = "pandas_handler",
    srcs = ["pandas_handler.py"],
    deps = [
        ":base_handler",
        ":core",
        ":utils",
        "//snowflake/ml/_internal/exceptions",
        "//snowflake/ml/model:type_hints",
    ],
)

py_test(
    name = "pandas_test",
    srcs = ["pandas_test.py"],
    tags = ["feature:model_registry"],
    deps = [
        ":core",
        ":pandas_handler",
        "//snowflake/ml/test_utils:exception_utils",
    ],
)

py_library(
    name = "numpy_handler",
    srcs = ["numpy_handler.py"],
    deps = [
        ":base_handler",
        ":core",
        ":pandas_handler",
        "//snowflake/ml/_internal/exceptions",
        "//snowflake/ml/model:type_hints",
    ],
)

py_test(
    name = "numpy_test",
    srcs = ["numpy_test.py"],
    tags = ["feature:model_registry"],
    deps = [
        ":core",
        ":numpy_handler",
        "//snowflake/ml/test_utils:exception_utils",
    ],
)

py_library(
    name = "pytorch_handler",
    srcs = ["pytorch_handler.py"],
    deps = [
        ":base_handler",
        ":core",
        ":numpy_handler",
        "//snowflake/ml/_internal:type_utils",
        "//snowflake/ml/_internal/exceptions",
        "//snowflake/ml/model:type_hints",
    ],
)

py_test(
    name = "pytorch_test",
    srcs = ["pytorch_test.py"],
    optional_dependencies = ["torch"],
    tags = ["feature:model_registry"],
    deps = [
        ":core",
        ":pytorch_handler",
        ":utils",
        "//snowflake/ml/test_utils:exception_utils",
    ],
)

py_library(
    name = "tensorflow_handler",
    srcs = ["tensorflow_handler.py"],
    deps = [
        ":base_handler",
        ":core",
        ":numpy_handler",
        "//snowflake/ml/_internal:type_utils",
        "//snowflake/ml/_internal/exceptions",
        "//snowflake/ml/model:type_hints",
    ],
)

py_test(
    name = "tensorflow_test",
    srcs = ["tensorflow_test.py"],
    optional_dependencies = [
        "tensorflow",
    ],
    tags = ["feature:model_registry"],
    deps = [
        ":core",
        ":tensorflow_handler",
        ":utils",
        "//snowflake/ml/test_utils:exception_utils",
    ],
)

py_library(
    name = "builtins_handler",
    srcs = ["builtins_handler.py"],
    deps = [
        ":base_handler",
        ":core",
        ":pandas_handler",
        "//snowflake/ml/_internal/exceptions",
        "//snowflake/ml/model:type_hints",
    ],
)

py_test(
    name = "builtins_test",
    srcs = ["builtins_test.py"],
    tags = ["feature:model_registry"],
    deps = [
        ":builtins_handler",
        ":core",
        "//snowflake/ml/test_utils:exception_utils",
    ],
)

py_library(
    name = "utils",
    srcs = ["utils.py"],
    deps = [
        ":core",
        "//snowflake/ml/_internal/exceptions",
    ],
)

py_test(
    name = "utils_test",
    srcs = ["utils_test.py"],
    tags = ["feature:model_registry"],
    deps = [
        ":core",
        ":utils",
        "//snowflake/ml/test_utils:exception_utils",
    ],
)

py_library(
    name = "snowpark_handler",
    srcs = ["snowpark_handler.py"],
    deps = [
        ":base_handler",
        ":core",
        ":pandas_handler",
        "//snowflake/ml/_internal/exceptions",
        "//snowflake/ml/_internal/utils:identifier",
        "//snowflake/ml/model:type_hints",
    ],
)

py_test(
    name = "snowpark_test",
    srcs = ["snowpark_test.py"],
    tags = ["feature:model_registry"],
    deps = [
        ":core",
        ":snowpark_handler",
        "//snowflake/ml/model:model_signature",
        "//snowflake/ml/test_utils:exception_utils",
        "//snowflake/ml/test_utils:mock_session",
        "//snowflake/ml/utils:connection_params",
    ],
)

py_library(
    name = "dmatrix_handler",
    srcs = ["dmatrix_handler.py"],
    deps = [
        ":base_handler",
        ":core",
        ":utils",
        "//snowflake/ml/_internal:type_utils",
        "//snowflake/ml/_internal/exceptions",
        "//snowflake/ml/model:type_hints",
    ],
)

py_test(
    name = "dmatrix_test",
    srcs = ["dmatrix_test.py"],
    tags = ["feature:model_registry"],
    deps = [
        ":core",
        ":dmatrix_handler",
        "//snowflake/ml/test_utils:exception_utils",
    ],
)
