load("//bazel:py_rules.bzl", "py_library", "py_test")

package(default_visibility = ["//visibility:public"])

py_library(
    name = "env",
    srcs = ["env.py"],
    deps = ["//snowflake/ml:version"],
)

py_library(
    name = "init_utils",
    srcs = ["init_utils.py"],
    deps = [],
)

py_library(
    name = "type_utils",
    srcs = ["type_utils.py"],
)

py_library(
    name = "file_utils",
    srcs = ["file_utils.py"],
    deps = [
        "//snowflake/ml/_internal/exceptions",
    ],
)

py_test(
    name = "file_utils_test",
    srcs = ["file_utils_test.py"],
    tags = ["feature:core"],
    deps = [
        ":file_utils",
        "//snowflake/ml/test_utils:mock_session",
    ],
)

py_library(
    name = "env_utils",
    srcs = ["env_utils.py"],
    deps = [
        ":env",
        ":relax_version_strategy",
        "//snowflake/ml/_internal/utils:query_result_checker",
    ],
)

py_test(
    name = "env_utils_test",
    srcs = ["env_utils_test.py"],
    tags = ["feature:core"],
    deps = [
        ":env",
        ":env_utils",
        ":relax_version_strategy",
        "//snowflake/ml/test_utils:mock_data_frame",
        "//snowflake/ml/test_utils:mock_session",
    ],
)

py_library(
    name = "telemetry",
    srcs = ["telemetry.py"],
    deps = [
        "//snowflake/ml/_internal:env",
        "//snowflake/ml/_internal/exceptions",
    ],
)

py_test(
    name = "telemetry_test",
    srcs = ["telemetry_test.py"],
    tags = ["feature:core"],
    deps = [
        ":telemetry",
        "//snowflake/ml/_internal:env",
        "//snowflake/ml/_internal/exceptions",
    ],
)

py_library(
    name = "cuda_utils",
    srcs = ["cuda_utils.py"],
)

py_test(
    name = "cuda_utils_test",
    srcs = ["cuda_utils_test.py"],
    tags = ["feature:core"],
    deps = [
        ":cuda_utils",
    ],
)

py_library(
    name = "migrator_utils",
    srcs = ["migrator_utils.py"],
)

py_library(
    name = "platform_capabilities",
    srcs = ["platform_capabilities.py"],
    deps = [
        "//snowflake/ml:version",
        "//snowflake/ml/_internal/exceptions",
        "//snowflake/ml/_internal/utils:query_result_checker",
    ],
)

py_test(
    name = "platform_capabilities_test",
    srcs = ["platform_capabilities_test.py"],
    tags = ["feature:core"],
    deps = [
        ":platform_capabilities",
        "//snowflake/ml/test_utils:mock_data_frame",
        "//snowflake/ml/test_utils:mock_session",
    ],
)

py_library(
    name = "relax_version_strategy",
    srcs = ["relax_version_strategy.py"],
)
