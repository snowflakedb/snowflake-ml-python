---
# Add requirements information here and use `bazel run --config=pre_build //bazel/requirements:sync_requirements`
# to generate all other requirements files.
# Please provide the following fields when adding a new record:
# # Package Name Fields

# `name`: The name of the package. Set this if the package is available with the same name and is required in both `PyPI`
# and `conda`.

# `name_pypi`: The name of the package in `PyPI`. Set this only to indicate that it is available in `PyPI` only. You can
# also set this along with `name_conda` if the package has different names in `PyPI` and `conda`.

# `name_conda`: The name of the package in `conda`. Set this only to indicate that it is available in `conda` only. You
# can also set this along with `name_pypi` if the package has different names in `PyPI` and `conda`.

# (At least one of these three fields should be set.)

# # Development Version Fields

# `dev_version`: The version of the package to be pinned in the dev environment. Set this if the package is available
# with the same version and is required in both `PyPI` and conda.

# `dev_version_pypi`: The version from `PyPI` to be pinned in the dev environment. Set this only to indicate that it is
# available in `PyPI` only. You can also set this along with `dev_version_conda` if the package has different versions in
# `PyPI` and `conda`.

# `dev_version_conda`: The version from `conda` to be pinned in the dev environment. Set this only to indicate that it is
# available in `conda` only. You can also set this along with `dev_version_pypi` if the package has different versions in
# `PyPI` and `conda`.

# (At least one of these three fields should be set.)

# `require_gpu`: Set this to true if the package is only a requirement for the environment with GPUs.

# # Snowflake Anaconda Channel

# `from_channel`: Set this if the package is not available in the Snowflake Anaconda Channel
# (https://repo.anaconda.com/pkgs/snowflake).

# # Version Requirements Fields (for `snowflake-ml-python` release)

# `version_requirements`: The version requirements specifiers when this requirement is a dependency of the
# `snowflake-ml-python` release. Set this if the package is available with the same name and required in both `PyPI` and
# `conda`.

# `version_requirements_pypi`: The version requirements specifiers when this requirement is a dependency of the
#`snowflake-ml-python` release via `PyPI`. Set this only to indicate that it is required by the `PyPI` release only. You
# can also set this along with `version_requirements_conda` if the package has different versions in `PyPI` and `conda`.

# `version_requirements_conda`: The version requirements specifiers when this requirement is a dependency of the
# `snowflake-ml-python` release via `conda`. Set this only to indicate that it is required by the `conda` release only.
# You can also set this along with `version_requirements_pypi` if the package has different versions in `PyPI` and `conda`.

# (At least one of these three fields must be set to indicate that this package is a dependency of the release. If you
# don't want to constrain the version, set the field to an empty string.)

# # Extras Tags and Tags

# `requirements_extra_tags`: Set this to indicate that the package is an extras dependency of `snowflake-ml-python`.
# This requirement will be added to all extras tags specified here, and an `all` extras tag will be auto-generated to include
# all extras requirements. All extras requirements will be labeled as `run_constrained` in conda's meta.yaml.

# `tags`: Set tags to filter some of the requirements in specific cases. The current valid tags include:
#   - `model_packaging`: Used by model packaging and deployment to indicate the core requirements to save and load the
#   model.
#   - `snowml_inference_alternative`: Used by model packaging and deployment to indicate a subset of requirements to run
#   inference as alternative of installing all dependencies of snowflake-ml-python.
#   - `build_essential`: Used to indicate the packages composing the build environment.
#   - `build_test_env`: Used to indicate the package is required in build and test environment to run the tests.

- name: absl-py
  dev_version: 1.3.0
  version_requirements: '>=0.15,<2'
  tags:
    - build_essential
    - snowml_inference_alternative
# For fsspec[http] in conda
- name_conda: aiohttp
  dev_version_conda: 3.8.3
  version_requirements_conda: '!=4.0.0a0, !=4.0.0a1'
- name: anyio
  dev_version: 3.5.0
  version_requirements: '>=3.5.0,<4'
  tags:
    - snowml_inference_alternative
- name: build
  dev_version: 0.10.0
  tags:
    - build_essential
- name: boto3
  dev_version: 1.24.28
- name_conda: conda-libmamba-solver
  dev_version_conda: 23.7.0
  tags:
    - build_essential
- name: catboost
  dev_version: 1.2.0
  version_requirements: '>=1.2.0, <2'
  requirements_extra_tags:
    - catboost
- name: cloudpickle
  dev_version: 2.2.1
  version_requirements: '>=2.0.0'
  tags:
    - model_packaging
- name: cryptography
  dev_version: 39.0.1
  # Skipping version requirements as it should come as part of connector.
  # Only used in connection_params.py, which is an util library anyways.
- name: coverage
  dev_version: 6.3.2
- name: flask-cors
  dev_version: 3.0.10
- name: flask
  dev_version: 2.1.3
- name_pypi: fsspec[http]
  name_conda: fsspec
  dev_version: 2023.3.0
  version_requirements: '>=2022.11,<2024'
- name: httpx
  dev_version: 0.23.0
- name: importlib_resources
  dev_version: 6.1.1
  version_requirements: '>=6.1.1, <7'
- name: inflection
  dev_version: 0.5.1
  tags:
    - build_essential
    - build_test_env
- name: jsonschema
  dev_version: 3.2.0
  tags:
    - build_essential
- name: joblib
  dev_version: 1.4.2
- name: lightgbm
  dev_version: 3.3.5
  version_requirements: '>=3.3.5,<5'
  requirements_extra_tags:
    - lightgbm
  tags:
    - build_essential
- name: shap
  dev_version: 0.46.0
  version_requirements: '>=0.46.0,<1'
  requirements_extra_tags:
    - shap
- name: mlflow
  dev_version: 2.3.1
  version_requirements: '>=2.1.0,<2.4'
  requirements_extra_tags:
    - mlflow
- name: moto
  dev_version: 4.0.11
- name: mypy
  dev_version: 1.10.0
- name: networkx
  dev_version: 2.8.4
- name: numpy
  dev_version: 1.23.5
  version_requirements: '>=1.23,<2'
  tags:
    - build_essential
    - snowml_inference_alternative
- name: packaging
  dev_version: '23.0'
  version_requirements: '>=20.9,<24'
  tags:
    - build_essential
    - snowml_inference_alternative
- name: pandas
  dev_version: 1.5.3
  version_requirements: '>=1.0.0,<3'
  tags:
    - snowml_inference_alternative
- name: protobuf
  dev_version: 3.20.3
- name: psutil
  dev_version: 5.9.0
  tags:
    - build_test_env
- name: pyarrow
  dev_version: 10.0.1
  version_requirements: ''
- name: pytest
  dev_version: 7.4.0
  tags:
    - build_test_env
- name: pytest-rerunfailures
  dev_version: 12.0
  tags:
    - build_test_env
- name: pytest-xdist
  dev_version: 3.5.0
  tags:
    - build_test_env
- name_pypi: torch
  name_conda: pytorch
  dev_version: 2.0.1
  version_requirements: '>=2.0.1,<2.3.0'
  requirements_extra_tags:
    - torch
- name: pyyaml
  dev_version: '6.0'
  version_requirements: '>=6.0,<7'
  tags:
    - snowml_inference_alternative
- name: retrying
  dev_version: 1.3.3
  version_requirements: '>=1.3.3,<2'
# For fsspec[http] in conda
- name_conda: requests
  dev_version_conda: 2.29.0
  version_requirements_conda: ''
- name: ruamel.yaml
  dev_version: 0.17.21
  tags:
    - build_essential
- name: s3fs
  dev_version: 2023.3.0
  version_requirements: '>=2022.11,<2024'
- name: scikit-learn
  dev_version: 1.5.1
  version_requirements: '>=1.4,<1.6'
  tags:
    - build_essential
- name: scipy
  dev_version: 1.9.3
  version_requirements: '>=1.9,<2'
- name: sentencepiece
  dev_version: 0.1.99
  version_requirements: '>=0.1.95,<1'
  requirements_extra_tags:
    - transformers
- name: sentence-transformers
  dev_version: 2.2.2
  version_requirements: '>=2.2.2,<3'
  requirements_extra_tags:
    - transformers
- name_conda: snowflake-connector-python
  name_pypi: snowflake-connector-python[pandas]
  dev_version: 3.10.0
  version_requirements: '>=3.5.0,<4'
- name: snowflake-snowpark-python
  dev_version: 1.17.0
  version_requirements: '>=1.17.0,<2'
  tags:
    - snowml_inference_alternative
- name: sphinx
  dev_version: 5.0.2
  tags:
    - build_essential
- name: starlette
  dev_version: 0.27.0
- name: sqlparse
  dev_version: 0.4.4
  version_requirements: '>=0.4,<1'
- name: tensorflow
  dev_version_conda: 2.12.0
  dev_version_pypi: 2.12.0
  version_requirements: '>=2.10,<3'
  requirements_extra_tags:
    - tensorflow
- name: tokenizers
  dev_version: 0.13.2
  version_requirements: '>=0.10,<1'
  requirements_extra_tags:
    - transformers
- name: toml
  dev_version: 0.10.2
  tags:
    - build_essential
- name: torchdata
  dev_version: 0.6.1
  version_requirements: '>=0.4,<1'
  requirements_extra_tags:
    - torch
- name: transformers
  dev_version: 4.32.1
  version_requirements: '>=4.32.1,<5'
  requirements_extra_tags:
    - transformers
- name: types-requests
  dev_version: 2.30.0.0
- name: types-protobuf
  dev_version: 4.23.0.1
- name: types-PyYAML
  dev_version: 6.0.12.12
- name: types-toml
  dev_version: 0.10.8.6
  tags:
    - build_essential
- name: typing-extensions
  dev_version: 4.6.3
  version_requirements: '>=4.1.0,<5'
  tags:
    - snowml_inference_alternative
- name: xgboost
  dev_version: 1.7.3
  version_requirements: '>=1.7.3,<3'
  tags:
    - build_essential
- name: werkzeug
  dev_version: 2.2.2
- name: cachetools
  dev_version: 4.2.2
  version_requirements: '>=3.1.1,<6'
- name: pytimeparse
  dev_version: 1.1.8
  version_requirements: '>=1.1.8,<2'

# Below are pip only external packages
- name_pypi: --extra-index-url https://pypi.org/simple
  dev_version_pypi: ''
- name_pypi: accelerate
  dev_version_pypi: 0.22.0
- name_pypi: types-cachetools
  dev_version_pypi: 4.2.2
- name_pypi: peft
  dev_version_pypi: 0.5.0
  version_requirements_pypi: '>=0.5.0,<1'
  requirements_extra_tags:
    - llm
- name_pypi: vllm
  dev_version_pypi: 0.2.1.post1
  require_gpu: true
